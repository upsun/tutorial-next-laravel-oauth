applications:
  next:
    source:
      root: "next"
    type: nodejs:20
    build:
      flavor: none
    web:
      locations:
        "/":
          passthru: true
      commands:
        start: "npm run start -- -p $PORT"
      upstream:
        socket_family: tcp
    mounts:
      "/.npm":
        source: "storage"
        source_path: "npm"
    hooks:
      build: |
        set -x -e
        npm install
        npm run build
  api:
    source:
      root: "api"
    type: "php:8.4"
    relationships:
      db: "database:postgresql"
      cache: "valkey:valkey"
    mounts:
      "/.config":
        source: "storage"
        source_path: "config"
      "bootstrap/cache":
        source: "storage"
        source_path: "cache"
      "storage":
        source: "storage"
        source_path: "storage"
    web:
      locations:
        "/":
          passthru: "/index.php"
          root: "public"
    build:
      flavor: none
    dependencies:
      php:
        composer/composer: "^2"
    runtime:
      extensions:
        - apcu
        - blackfire
        - ctype
        - iconv
        - mbstring
        - pdo_pgsql
        - sodium
        - xsl
        - redis
    hooks:
      build: |
        set -eux
        composer --no-ansi --no-interaction install --no-progress --prefer-dist --optimize-autoloader --no-dev
        npm install
        npm run build
      deploy: |
        set -eux
        mkdir -p storage/framework/sessions
        mkdir -p storage/framework/cache
        mkdir -p storage/framework/views
        php artisan key:generate
        php artisan migrate --force
        php artisan telescope:publish
        php artisan passport:keys
        php artisan optimize:clear

routes:
  "https://api.{all}/": { type: upstream, upstream: "api:http", id: "api" }
  "https://{all}/": { type: upstream, upstream: "next:http", id: "next" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }

services: 
  database:
    type: postgresql:15
  valkey:
    type: valkey:8.0